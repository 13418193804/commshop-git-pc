{"version":3,"sources":["webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./src/components/Swipe.vue?1d3f","webpack:///./src/components/Swipe.vue?a2b9","webpack:///./src/components/Swipe.vue","webpack:///./src/pages/test/test.vue?8347","webpack:///./src/pages/test/test.vue?2037","webpack:///./src/pages/test/test.vue"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","dom7LiveListeners","type","proxyListener","dom7Listeners","off","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","handler","priority","method","event","onceHandler","eventHandler","index$$1","splice","data$$1","Array","isArray","slice","handlers","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","slides","slideClass","slidesLength","virtual","enabled","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSlidesLength","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","isVirtual","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","snapIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","transition$1","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventIntercationOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","which","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","freeModeMomentumBounce","freeModeSticky","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","innerWidth","swiper_esm_bundle_Browser","isIE","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","isLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","mutation","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","normalize","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stopAutoplay","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","totalClass","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","sqrt","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","val","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","stop","running","run","paused","waitForTransition","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","hideOnClick","render","onTransitionEnd","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","swiper_esm_bundle","_super","Swipe","tslib_es6","mounted","vue_property_decorator_umd","required","vue_class_component_common_default","vue_esm","selectortype_template_index_0_src_components_Swipe","_h","$createElement","_c","_self","staticClass","_l","list","id","linkUrl","picUrl","_v","staticRenderFns","Component","__webpack_require__","normalizeComponent","components_Swipe","ssrContext","__webpack_exports__","recommend","_this","active","console","log","mixins","mixin","test_test"],"mappings":"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","file":"static/js/5.9386702ac7a03b8c24ab.js","sourcesContent":["/**\n * SSR Window 1.0.0\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: February 10, 2018\n */\nvar d;\nif (typeof document === 'undefined') {\n  d = {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  };\n} else {\n  // eslint-disable-next-line\n  d = document;\n}\n\nvar doc = d;\n\nvar w;\nif (typeof window === 'undefined') {\n  w = {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  };\n} else {\n  // eslint-disable-next-line\n  w = window;\n}\n\nvar win = w;\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.0.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 21, 2018\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  if (typeof value === 'undefined') {\n    if (this[0]) {\n      if (this[0].multiple && this[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < this[0].selectedOptions.length; i += 1) {\n          values.push(this[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return this[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].value = value;\n  }\n  return this;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    eventData.unshift(e);\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    eventData.unshift(e);\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        if (!el.dom7Listeners) el.dom7Listeners = [];\n        el.dom7Listeners.push({\n          type: eventType,\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(events[j], handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = [];\n        el.dom7LiveListeners.push({\n          type: eventType,\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(events[j], handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      if (!targetSelector) {\n        if (el.dom7Listeners) {\n          for (let k = 0; k < el.dom7Listeners.length; k += 1) {\n            if (listener) {\n              if (el.dom7Listeners[k].listener === listener) {\n                el.removeEventListener(events[i], el.dom7Listeners[k].proxyListener, capture);\n              }\n            } else if (el.dom7Listeners[k].type === events[i]) {\n              el.removeEventListener(events[i], el.dom7Listeners[k].proxyListener, capture);\n            }\n          }\n        }\n      } else if (el.dom7LiveListeners) {\n        for (let k = 0; k < el.dom7LiveListeners.length; k += 1) {\n          if (listener) {\n            if (el.dom7LiveListeners[k].listener === listener) {\n              el.removeEventListener(events[i], el.dom7LiveListeners[k].proxyListener, capture);\n            }\n          } else if (el.dom7LiveListeners[k].type === events[i]) {\n            el.removeEventListener(events[i], el.dom7LiveListeners[k].proxyListener, capture);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(e) {\n    const eventData = e.target.dom7EventData || [];\n    listener.apply(this, eventData);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      let evt;\n      try {\n        evt = new window.CustomEvent(events[i], {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(events[i], true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      this[j].dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      this[j].dispatchEvent(evt);\n      this[j].dom7EventData = [];\n      delete this[j].dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.2.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: March 16, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n  off(events, handler) {\n    const self = this;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSlidesLength = slidesLength;\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      if (swiper.isHorizontal()) {\n        slideSize = slide[0].getBoundingClientRect().width +\n          parseFloat(slideStyles.getPropertyValue('margin-left')) +\n          parseFloat(slideStyles.getPropertyValue('margin-right'));\n      } else {\n        slideSize = slide[0].getBoundingClientRect().height +\n          parseFloat(slideStyles.getPropertyValue('margin-top')) +\n          parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(snapGrid[i]);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(snapGrid[i]);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress =\n      (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible =\n                (slideBefore >= 0 && slideBefore < swiper.size) ||\n                (slideAfter > 0 && slideAfter <= swiper.size) ||\n                (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n}\n\nfunction updateProgress (translate = this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, $wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      $wrapperEl.transitionEnd(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.transitionEnd(runCallbacks, direction);\n      });\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex - 1, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex - 1, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2)) ||\n        (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex > slides.length - (params.slidesPerView * 2))) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndex;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi =\n      !device.webView &&\n      (ipod || iphone) &&\n      (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) &&\n      metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  if (\n    Device.ios &&\n    !Device.cordova &&\n    params.iOSEdgeSwipeDetection &&\n    (startX <= params.iOSEdgeSwipeThreshold) &&\n    (startX >= window.screen.width - params.iOSEdgeSwipeThreshold)\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement &&\n      $(document.activeElement).is(data$$1.formElements) &&\n      document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) ||\n        (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||\n      (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    } else if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on('resize observerUpdate', onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off('resize observerUpdate', onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const { activeIndex, loopedSlides = 0, params } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowTouchMove = !swiper.isLocked;\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventIntercationOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  iOSEdgeSwipeDetection: false,\n  iOSEdgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object') return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object' &&\n          !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    swiper.emit('update');\n  }\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n  }\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static get Class() {\n    return SwiperClass;\n  }\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      mutations.forEach((mutation) => {\n        swiper.emit('observerUpdate', mutation);\n      });\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1);\n      slidesBefore = slidesPerGroup;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth &&\n          point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported &&\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.stopAutoplay();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.nextEl === 'string' &&\n        $nextEl.length > 1 &&\n        swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.prevEl === 'string' &&\n        $prevEl.length > 1 &&\n        swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick &&\n        !$(e.target).is($prevEl) &&\n        !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(current + 1);\n      $el.find(`.${params.totalClass}`).text(total);\n    }\n    if (params.type === 'progressbar') {\n      const scale = (current + 1) / total;\n      let scaleX = scale;\n      let scaleY = 1;\n      if (!swiper.isHorizontal()) {\n        scaleY = scale;\n        scaleX = 1;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML =\n        `<span class=\"${params.currentClass}\"></span>` +\n        ' / ' +\n        `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements &&\n      typeof params.el === 'string' &&\n      $el.length > 1 &&\n      swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el &&\n        swiper.params.pagination.hideOnClick &&\n        swiper.pagination.$el.length > 0 &&\n        !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x) ||\n          (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } else if (\n        !swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y) ||\n          (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop ?\n        new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) :\n        new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      swiper.slideTo(swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index());\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl.transitionEnd(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.autoplay.paused = false;\n        if (!swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.run();\n        }\n      });\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ?\n        Math.max(1 - Math.abs($slideEl[0].progress), 0) :\n        1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2) +\n          (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport Component from 'vue-class-component';\nimport { Prop } from 'vue-property-decorator';\nimport Swiper from 'swiper';\n\n@Component\nexport default class Swipe extends Vue {\n    @Prop({ required: true })\n    lists: any;\n\n    mounted() {\n        new Swiper('.swiper-container', {\n            loop: true,\n            pagination: {\n                el: '.swiper-pagination'\n            },\n            autoplay: true\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Swipe.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.lists),function(list){return _c('div',{key:list.id,staticClass:\"swiper-slide\"},[_c('a',{attrs:{\"href\":list.linkUrl}},[_c('img',{attrs:{\"src\":list.picUrl}})])])})),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\"})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1ef05336\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Swipe.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1ef05336\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Swipe.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!ts-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Swipe.vue\"\nimport __vue_script__ from \"!!ts-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Swipe.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1ef05336\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Swipe.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Swipe.vue\n// module id = null\n// module chunks = ","\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport Component from 'vue-class-component';\r\nimport Swipe from '../../components/Swipe.vue';\r\nimport mixin from '../../config/mixin';\r\n\r\n@Component({\r\n    components: {\r\n        Swipe\r\n    },\r\n    mixins: [mixin]\r\n})\r\nexport default class recommend extends Vue {\r\n  active = 0;\r\n    mounted() {\r\n       console.log(\"测试页加载\")\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/test/test.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tab-contents\"})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-9ff78d6c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/test/test.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9ff78d6c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./test.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!ts-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./test.vue\"\nimport __vue_script__ from \"!!ts-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./test.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9ff78d6c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./test.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-9ff78d6c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/test/test.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}